<testSuite>
	<tests>
		<test id="ordinal.Jahrhundert" language="de">
			<input>Er starb im 19. Jahrhundert.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Er⁍ ⁌starb⁍ ⁌im⁍ ⁌19⁍ ⁌.⁍ ▶ ◀⁌Jahrhundert⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point mis-detected as sentence boundary.</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Er⁍ ⁌starb⁍ ⁌im⁍ ⁌19.⁍ ⁌Jahrhundert⁍ ⁌.⁍ ▶</output>
					<description>GOOD - Ordinal number point is part of number token</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Er⁍ ⁌starb⁍ ⁌im⁍ ⁌19⁍ ⁌.⁍ ⁌Jahrhundert⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point is separate token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="ordinal.Mann" language="de">
			<input>Und dann kam der 3. Mann ins Spiel.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Und⁍ ⁌dann⁍ ⁌kam⁍ ⁌der⁍ ⁌3⁍ ⁌.⁍ ▶ ◀⁌Mann⁍ ⁌ins⁍ ⁌Spiel⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point mis-detected as sentence boundary.</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Und⁍ ⁌dann⁍ ⁌kam⁍ ⁌der⁍ ⁌3.⁍ ⁌Mann⁍ ⁌ins⁍ ⁌Spiel⁍ ⁌.⁍ ▶</output>
					<description>GOOD - Ordinal number point is part of number token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="ordinal.Platz" language="de">
			<input>Sie stehen zurzeit auf dem 15. Platz der Rangliste.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Sie⁍ ⁌stehen⁍ ⁌zurzeit⁍ ⁌auf⁍ ⁌dem⁍ ⁌15⁍ ⁌.⁍ ▶ ◀⁌Platz⁍ ⁌der⁍ ⁌Rangliste⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point mis-detected as sentence boundary.</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Sie⁍ ⁌stehen⁍ ⁌zurzeit⁍ ⁌auf⁍ ⁌dem⁍ ⁌15.⁍ ⁌Platz⁍ ⁌der⁍ ⁌Rangliste⁍ ⁌.⁍ ▶</output>
					<description>GOOD - Ordinal number point is part of number token</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Sie⁍ ⁌stehen⁍ ⁌zurzeit⁍ ⁌auf⁍ ⁌dem⁍ ⁌15⁍ ⁌.⁍ ⁌Platz⁍ ⁌der⁍ ⁌Rangliste⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point is separate token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="ordinal.Weltkrieg" language="de">
			<input>Der 1. Weltkrieg dauerte 4 Jahre.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌1⁍ ⁌.⁍ ▶ ◀⁌Weltkrieg⁍ ⁌dauerte⁍ ⁌4⁍ ⁌Jahre⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point mis-detected as sentence boundary and is separate token.</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌1.⁍ ⁌Weltkrieg⁍ ⁌dauerte⁍ ⁌4⁍ ⁌Jahre⁍ ⁌.⁍ ▶</output>
					<description>GOOD - Ordinal number point is part of number token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="ordinal.date" language="de">
			<input>Der erste Weltkrieg begann mit dem Attentat von Sarajevo am 28. Juni 1914.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌erste⁍ ⁌Weltkrieg⁍ ⁌begann⁍ ⁌mit⁍ ⁌dem⁍ ⁌Attentat⁍ ⁌von⁍ ⁌Sarajevo⁍ ⁌am⁍ ⁌28⁍ ⁌.⁍ ▶ ◀⁌Juni⁍ ⁌1914⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point mis-detected as sentence boundary.</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌erste⁍ ⁌Weltkrieg⁍ ⁌begann⁍ ⁌mit⁍ ⁌dem⁍ ⁌Attentat⁍ ⁌von⁍ ⁌Sarajevo⁍ ⁌am⁍ ⁌28.⁍ ⁌Juni⁍ ⁌1914.⁍ ▶</output>
					<description>GOOD - Ordinal number point is part of number token</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌erste⁍ ⁌Weltkrieg⁍ ⁌begann⁍ ⁌mit⁍ ⁌dem⁍ ⁌Attentat⁍ ⁌von⁍ ⁌Sarajevo⁍ ⁌am⁍ ⁌28⁍ ⁌.⁍ ⁌Juni⁍ ⁌1914⁍ ⁌.⁍ ▶</output>
					<description>BAD - Ordinal number point is separate token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="abbreviation.M_Sc_" language="de">
			<input>Der akademische Titel M.Sc. Informatik berechtigt zur Promotion.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌akademische⁍ ⁌Titel⁍ ⁌M.Sc⁍ ⁌.⁍ ▶ ◀⁌Informatik⁍ ⁌berechtigt⁍ ⁌zur⁍ ⁌Promotion⁍ ⁌.⁍ ▶</output>
					<description>BAD - dot closing abbreviation mis-detected as sentence boundary</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Der⁍ ⁌akademische⁍ ⁌Titel⁍ ⁌M⁍ ⁌.⁍ ⁌Sc⁍ ⁌.⁍ ▶ ◀⁌Informatik⁍ ⁌berechtigt⁍ ⁌zur⁍ ⁌Promotion⁍ ⁌.⁍ ▶</output>
					<description>BAD - dot closing abbreviation mis-detected as sentence boundary and abbreviation falls apart</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="abbreviation.middle.initial" language="de">
			<input>Christian M. Meyer wird demnächst seine Dissertation fertig stellen.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Christian⁍ ⁌M.⁍ ⁌Meyer⁍ ⁌wird⁍ ⁌demnächst⁍ ⁌seine⁍ ⁌Dissertation⁍ ⁌fertig⁍ ⁌stellen⁍ ⁌.⁍ ▶</output>
					<description>GOOD - middle initial dot not separated, single sentence</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Christian⁍ ⁌M⁍ ⁌.⁍ ▶ ◀⁌Meyer⁍ ⁌wird⁍ ⁌demnächst⁍ ⁌seine⁍ ⁌Dissertation⁍ ⁌fertig⁍ ⁌stellen⁍ ⁌.⁍ ▶</output>
					<description>BAD - closing dot mis-detected as sentence boundary and is separated from abbreviation</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Christian⁍ ⁌M.⁍ ▶ ◀⁌Meyer⁍ ⁌wird⁍ ⁌demnächst⁍ ⁌seine⁍ ⁌Dissertation⁍ ⁌fertig⁍ ⁌stellen⁍ ⁌.⁍ ▶</output>
					<description>BAD - closing dot  mis-detected as sentence boundary and abbreviation falls apart</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌Christian⁍ ⁌M⁍ ⁌.⁍ ⁌Meyer⁍ ⁌wird⁍ ⁌demnächst⁍ ⁌seine⁍ ⁌Dissertation⁍ ⁌fertig⁍ ⁌stellen⁍ ⁌.⁍ ▶</output>
					<description>BAD - closing dot is separated from abbreviation</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="directspeech.question.smartquotes" language="de">
			<input>„Wird der Splitter das hier meistern?“, wollte er wissen.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌„⁍ ⁌Wird⁍ ⁌der⁍ ⁌Splitter⁍ ⁌das⁍ ⁌hier⁍ ⁌meistern⁍ ⁌?⁍ ▶ ◀⁌“⁍ ⁌,⁍ ⁌wollte⁍ ⁌er⁍ ⁌wissen⁍ ⁌.⁍ ▶</output>
					<description>BAD - the two quotes end up in different sentences</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌„Wird⁍ ⁌der⁍ ⁌Splitter⁍ ⁌das⁍ ⁌hier⁍ ⁌meistern⁍ ⁌?“,⁍ ▶ ◀⁌wollte⁍ ⁌er⁍ ⁌wissen⁍ ⁌.⁍ ▶</output>
					<description>BAD - two sentences and punctuation cloggs together</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌„⁍ ⁌Wird⁍ ⁌der⁍ ⁌Splitter⁍ ⁌das⁍ ⁌hier⁍ ⁌meistern⁍ ⁌?⁍ ⁌“⁍ ⁌,⁍ ⁌wollte⁍ ⁌er⁍ ⁌wissen⁍ ⁌.⁍ ▶</output>
					<description>GOOD - one sentence</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="directspeech.question.doublequotes" language="de">
			<input>"Wird der Splitter das hier meistern?", wollte er wissen.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌"⁍ ⁌Wird⁍ ⁌der⁍ ⁌Splitter⁍ ⁌das⁍ ⁌hier⁍ ⁌meistern⁍ ⁌?⁍ ⁌"⁍ ▶ ◀⁌,⁍ ⁌wollte⁍ ⁌er⁍ ⁌wissen⁍ ⁌.⁍ ▶</output>
					<description>BAD - two sentences</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌"Wird⁍ ⁌der⁍ ⁌Splitter⁍ ⁌das⁍ ⁌hier⁍ ⁌meistern⁍ ⁌?",⁍ ▶ ◀⁌wollte⁍ ⁌er⁍ ⁌wissen⁍ ⁌.⁍ ▶</output>
					<description>BAD - two sentences and punctuation cloggs together</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌"⁍ ⁌Wird⁍ ⁌der⁍ ⁌Splitter⁍ ⁌das⁍ ⁌hier⁍ ⁌meistern⁍ ⁌?⁍ ⁌"⁍ ⁌,⁍ ⁌wollte⁍ ⁌er⁍ ⁌wissen⁍ ⁌.⁍ ▶</output>
					<description>GOOD - one sentence</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="number.version.underspecified" language="en">
			<input>John loves Windows 3.x and DOS.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌John⁍ ⁌loves⁍ ⁌Windows⁍ ⁌3⁍ ⁌.⁍ ⁌x⁍ ⁌and⁍ ⁌DOS⁍ ⁌.⁍ ▶</output>
					<description>BAD - version split into multiple tokens</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌John⁍ ⁌loves⁍ ⁌Windows⁍ ⁌3.x⁍ ⁌and⁍ ⁌DOS.⁍ ▶</output>
					<description>BAD - sentence marker is not a separate token</description>
				</possibleOutput>
				<possibleOutput>
					<output> ◀⁌John⁍ ⁌loves⁍ ⁌Windows⁍ ⁌3⁍ ⁌.⁍ ▶ ◀⁌x⁍ ⁌and⁍ ⁌DOS⁍ ⁌.⁍ ▶</output>
					<description>BAD - version separator misdetected as sentence separator</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="namedentity.ampersand" language="en">
			<input>I called the AT&amp;T support today.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌I⁍ ⁌called⁍ ⁌the⁍ ⁌AT⁍ ⁌&amp;⁍ ⁌T⁍ ⁌support⁍ ⁌today⁍ ⁌.⁍ ▶</output>
					<description>BAD - "AT&amp;T" is split</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌I⁍ ⁌called⁍ ⁌the⁍ ⁌AT&amp;T⁍ ⁌support⁍ ⁌today⁍ ⁌.⁍ ▶</output>
					<description>GOOD - "AT&amp;T" is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="number.n-th" language="en">
			<input>We travel to the n-th dimension.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌We⁍ ⁌travel⁍ ⁌to⁍ ⁌the⁍ ⁌n-th⁍ ⁌dimension⁍ ⁌.⁍ ▶</output>
					<description>GOOD - "n-th" is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="namedentity.location.compound" language="en">
			<input>We visit Barton-upon-Humber in summer.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌We⁍ ⁌visit⁍ ⁌Barton-upon-Humber⁍ ⁌in⁍ ⁌summer⁍ ⁌.⁍ ▶</output>
					<description>GOOD - "Barton-upon-Humber" is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="time.decade" language="en">
			<input>The '20s had been a tough time.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌'⁍ ⁌20s⁍ ⁌had⁍ ⁌been⁍ ⁌a⁍ ⁌tough⁍ ⁌time⁍ ⁌.⁍ ▶</output>
					<description>BAD - the apostrophe is split off</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌'20s⁍ ⁌had⁍ ⁌been⁍ ⁌a⁍ ⁌tough⁍ ⁌time⁍ ⁌.⁍ ▶</output>
					<description>GOOD - the apostrophe is not split off</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="number.range" language="en">
			<input>We get 10-20 of these each day.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌We⁍ ⁌get⁍ ⁌10⁍ ⁌-⁍ ⁌20⁍ ⁌of⁍ ⁌these⁍ ⁌each⁍ ⁌day⁍ ⁌.⁍ ▶</output>
					<description>BAD - the range is split into multiple tokens</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌We⁍ ⁌get⁍ ⁌10-20⁍ ⁌of⁍ ⁌these⁍ ⁌each⁍ ⁌day⁍ ⁌.⁍ ▶</output>
					<description>GOOD - the range is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="number.percentage" language="en">
			<input>The car is 20% off today.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌car⁍ ⁌is⁍ ⁌20⁍ ⁌%⁍ ⁌off⁍ ⁌today⁍ ⁌.⁍ ▶</output>
					<description>BAD - "20%" is split into two tokens</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌car⁍ ⁌is⁍ ⁌20%⁍ ⁌off⁍ ⁌today⁍ ⁌.⁍ ▶</output>
					<description>GOOD - "20%" is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="wisp" language="en">
			<input>The elusive will-o'-the-wisp haunts the forest.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌elusive⁍ ⁌will-o⁍ ⁌'⁍ ⁌-⁍ ⁌the-wisp⁍ ⁌haunts⁍ ⁌the⁍ ⁌forest⁍ ⁌.⁍ ▶</output>
					<description>BAD - "will-o'-the-wisp" is split into multiple tokens</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌elusive⁍ ⁌will-o⁍ ⁌'⁍ ⁌-the-wisp⁍ ⁌haunts⁍ ⁌the⁍ ⁌forest⁍ ⁌.⁍ ▶</output>
					<description>BAD - "will-o'-the-wisp" is split into multiple tokens</description>
				</possibleOutput>
				<possibleOutput>
					<output>◀⁌The⁍ ⁌elusive⁍ ⁌will-o'-the-wisp⁍ ⁌haunts⁍ ⁌the⁍ ⁌forest⁍ ⁌.⁍ ▶</output>
					<description>GOOD - "will-o'-the-wisp" is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
		<test id="adjective.compound" language="en">
			<input>Let us visit the Museum of Afro-American History in Boston.</input>
			<possibleOutputs>
				<possibleOutput>
					<output>◀⁌Let⁍ ⁌us⁍ ⁌visit⁍ ⁌the⁍ ⁌Museum⁍ ⁌of⁍ ⁌Afro-American⁍ ⁌History⁍ ⁌in⁍ ⁌Boston⁍ ⁌.⁍ ▶</output>
					<description>GOOD - compound is one token</description>
				</possibleOutput>
			</possibleOutputs>
		</test>
	</tests>
</testSuite>
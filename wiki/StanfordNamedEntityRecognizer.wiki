#summary One-sentence summary of this page.

= Introduction =

This tutorial describes how to use the [http://www-nlp.stanford.edu/software/CRF-NER.shtml StanfordNamedEntityRecognizer] component of !DkPro.

= Types = 

Using the standard named entity recognizers for English there are three classes:

  * PERSON (e.g. "Anna")
  * ORGANIZATION (e.g. "UN")
  * LOCATION (e.g. "Berlin")

= Pre-requisites =

Either, create a new Maven project or incorporate the following to your existing Maven project.

You'll need the following dependency:

  * de.tudarmstadt.ukp.dkpro.core.stanford.namedentityrecognizer

= Create your experiment =

An example pipeline may look like this:

   {{{
package de.tudarmstadt.ukp.tutorial.ner;
import static org.uimafit.factory.AnalysisEngineFactory.createPrimitiveDescription;
import static org.uimafit.factory.CollectionReaderFactory.createCollectionReader;

import java.io.IOException;

import org.apache.uima.UIMAException;
import org.apache.uima.analysis_engine.AnalysisEngineDescription;
import org.apache.uima.collection.CollectionReader;
import org.uimafit.pipeline.SimplePipeline;

import de.tudarmstadt.ukp.dkpro.core.annotator.StanfordNamedEntityRecognizer;
import de.tudarmstadt.ukp.dkpro.core.tokit.BreakIteratorSegmenter;

public class Pipeline
{

    public static void main(String[] args)
    	throws UIMAException, IOException
    {
        CollectionReader reader = createCollectionReader(
                DummyReader.class
        );
        
        AnalysisEngineDescription seg = createPrimitiveDescription(
        		BreakIteratorSegmenter.class
        );

        AnalysisEngineDescription ner = createPrimitiveDescription(
        		StanfordNamedEntityRecognizer.class
        );
        
        AnalysisEngineDescription writer = createPrimitiveDescription(
                DummyWriter.class
        );

        SimplePipeline.runPipeline(reader, seg, ner, writer);
    }
}
  }}}
#summary This page describes processing a small paragraph with Stanford CoreNLP components: StanfordSegmenter, StanfordNamedEntityRecognizer, StanfordParser.

<wiki:toc max_depth="3" />

= Introduction =

This page describes processing a small paragraph with Stanford CoreNLP components (*!StanfordSegmenter*, *!StanfordNamedEntityRecognizer*, *!StanfordParser*) and writing out the *noun phrases* (NP) and *Named Entities* (NE) ocurring in the NPs into a file (CSV format), such as e.g.
  * NP   the new product of UKP Lab   NE UKP Lab
  * NP   the latest announcements in the news   NE -

All these components are UIMA annotators for the *Stanford CoreNLP* software ([http://www-nlp.stanford.edu/software/corenlp.shtml website]).

= Pre-requisites =

Either, create a new Maven project or incorporate the following to your existing Maven project. It is expected that you read the [http://code.google.com/p/dkpro-core-asl/wiki/MyFirstDKProProject basic tutorial].

You'll need the following dependencies:

  * de.tudarmstadt.ukp.dkpro.core-asl (Dependency Management)
  * de.tudarmstadt.ukp.dkpro.core.tokit-asl (Dependencies)
  * de.tudarmstadt.ukp.dkpro.core.stanfordnlp-gpl

= !StanfordSegmenter = 

The Stanford Segmenter performs tokenizations and makes sentence and token annotations and can serve as an alternative for other components like the _!BreakIteratorSegmenter_.

== Pipeline ==

Include the component into your pipeline this way:

   {{{
  AnalysisEngineDescription ner = createPrimitiveDescription(
    StanfordSegmenter.class
  );
   }}}

== Output == 

An example annotations output may look like this:

   {{{
INFO: === CAS ===
-- Document Text --
The headquarters of the UN is a complex in New York City.
-- Annotations --
[DocumentAnnotation] (0, 57) The headquarters of the UN is a complex in New York City.
[Sentence] (0, 57) The headquarters of the UN is a complex in New York City.
[Token] (0, 3) The
[Token] (4, 16) headquarters
[Token] (17, 19) of
[Token] (20, 23) the
[Token] (24, 26) UN
[Token] (27, 29) is
[Token] (30, 31) a
[Token] (32, 39) complex
[Token] (40, 42) in
[Token] (43, 46) New
[Token] (47, 51) York
[Token] (52, 56) City
[Token] (56, 57) .
   }}}

= !StanfordNamedEntityRecognizer = 

The Stanford NER ([http://nlp.stanford.edu/software/CRF-NER.shtml website]) is a CRFClassifier implementation of a Named Entity Recognizer to label sequences of words in a text which are the names of things, such as person and company names, or gene and protein names.

== Types ==

Using the standard named entity recognizers for English there are three classes:

  * PERSON (e.g. "Anna")
  * ORGANIZATION (e.g. "UN")
  * LOCATION (e.g. "Berlin")

The corresponding UIMA annotation types are called "Person", "Organization" and "Location", from the package *de.tudarmstadt.ukp.dkpro.core.type.ner*.

== Pipeline ==

Include the component into your pipeline this way:

   {{{
  AnalysisEngineDescription ner = createPrimitiveDescription(
    StanfordNamedEntityRecognizer.class
  );
   }}}

== Output ==

An example annotations output may look like this:

   {{{
INFO: === CAS ===
-- Document Text --
The headquarters of the UN is a complex in New York City.
-- Annotations --
[DocumentAnnotation] (0, 57) The headquarters of the UN is a complex in New York City.
[Organization] (24, 26) UN
[Location] (43, 56) New York City
   }}}

= !StanfordParser = 

= Create your experiment =